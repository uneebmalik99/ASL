import React, { Component } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, FlatList, Image, TextInput } from 'react-native'
import Routes from '../../routes/Routes';
import FadeInView from '../../styles/FadeInView'
import Elavation from '../../styles/Elavation';
import AppColors from '../../Colors/AppColors';
import AppConstance, { deviceHeight, deviceWidth } from '../../constance/AppConstance';
import AppFonts from '../../AppFont/AppFonts';
import MaterialCommunityIcons from 'react-native-vector-icons/dist/MaterialCommunityIcons';
import SimpleLineIcons from 'react-native-vector-icons/dist/SimpleLineIcons';
import Feather from 'react-native-vector-icons/dist/Feather';
import Octicons from 'react-native-vector-icons/dist/Octicons';
import Toolbar from '../../screens/ToolbarScreen/Toolbar';
import InnerToolbar from '../../screens/ToolbarScreen/InnerToolbar';
import { Container, Header, Tab, Tabs, ScrollableTab, TabHeading } from 'native-base';
import FontAwesome from 'react-native-vector-icons/dist/FontAwesome';
import AntDesign from 'react-native-vector-icons/dist/AntDesign';
import ModalDialog from "react-native-modal";



class VehcileContainerListScreen extends Component {
    constructor(props) {
        super(props)

        this.state = {
            isDisplayView: 0,
            tabIndex: 0,
            selectFilterName: '',
            isModalVisible: false,
            vehicleList: [
                {
                    id: 1,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Rajkot',
                    image: require('../../Images/car_image2.jpg')
                }, {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Mumbai',
                    image: require('../../Images/car_image1.jpg')
                },
                {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    location: 'Delhi',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    image: require('../../Images/car_image1.jpg')
                },
                {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Puna',
                    image: require('../../Images/download.jpg')
                },
                {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Mumbai',
                    image: require('../../Images/car_image2.jpg')
                },
                {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Rajkot',
                    image: require('../../Images/download1.jpg')
                },
                {
                    id: 2,
                    hatNo: 1215,
                    customerName: 'Haqsoft Pvt Ltd.',
                    year: 2014,
                    make: 'Toyota',
                    model: 'Camry',
                    vin: '4T1BE30K14U8499171277',
                    condition: 'Non-Op',
                    status: 'SHIPPED',
                    titleRecieved: 'YES',
                    towed: 'YES',
                    lotNo: '12333',
                    location: 'Delhi',
                    image: require('../../Images/car_image2.jpg')
                },
            ],
            categoryList: [
                'New Purchase', 'On Hand', 'Ready to Ship', 'Car on the way', 'Arrived', ''
            ]
        }
    }

    componentDidMount() {
       
    }

    callingVehicleDetailSCreen = (item) => {
        // if (filterItemObj != null) {
        //     console.log('Filter Obj::: ',filterItemObj)
        //    this.props.navigation.navigate('VehicleImageListScreen', { 'itemObj': item })
        // } else {
        //     this.props.setProps.navigation.navigate('VehicleImageListScreen', { 'itemObj': item })
        // }
    }

    //render Vehicle
    renderVehicle = ({ item, index }) => {
        return <Elavation
            elevation={2}
            style={{ width: deviceWidth * 0.95, height: 80, flexDirection: 'row', marginBottom: 5, backgroundColor: 'white', marginRight: 10, marginLeft: 10, marginTop: 4 }}
        >
            <TouchableOpacity style={{ width: deviceWidth * 0.3, height: 80 }}
                onPress={() => AppConstance.APP_PROPS.navigation.navigate('VehicleImageListScreen', { 'itemObj': item })}
            >
                <Image style={{ width: undefined, height: undefined, flex: 1 }} source={item.image} />
            </TouchableOpacity>

            <TouchableOpacity style={{ flex: 1, justifyContent: 'space-between', paddingTop: 5, paddingBottom: 5, paddingLeft: 10 }}
                onPress={() => AppConstance.APP_PROPS.navigation.navigate('VehcilDetailScreen', { 'itemObj': item })}
            >
                <Text style={{ fontFamily: AppFonts.JosefinSansSemiBold, color: AppColors.textColor, fontSize: 13 }}>{item.model.toUpperCase() + ' ' + item.make.toUpperCase() + ' ' + item.model.toUpperCase()}</Text>
                <Text style={{ fontFamily: AppFonts.JosefinSansRegular, color: AppColors.textColor, fontSize: 12 }}>{item.location + ' | ' + item.lotNo}</Text>
                <Text style={{ fontFamily: AppFonts.JosefinSansRegular, color: AppColors.textColor, fontSize: 12 }}>{'Status : ' + item.status}</Text>
            </TouchableOpacity>
        </Elavation>
    }

    onTabChange = (event) => {
        this.setState({ tabIndex: event.i })
    }


    //set filter name
    setFiltername = (text) => {
        this.setState({ selectFilterName: text, isModalVisible: false })
    }

    //Rener Category Content
    renderCategoryContent = ({ item, index }) => {
        return (
            <TouchableOpacity style={{ width: deviceWidth, height: 50, alignItems: 'center', alignContent: 'center', flexDirection: 'row', paddingLeft: 10 }}
                onPress={() => this.setFiltername(item)}
            >
                {this.state.selectFilterName == item ? <MaterialCommunityIcons name='check' color={AppColors.textColor} size={18} />
                    : <View style={{ width: 18 }} />}

                <Text style={{ fontFamily: AppFonts.JosefinSansRegular, color: AppColors.textColor, fontSize: 15, paddingLeft: 10 }}>{item}</Text>
            </TouchableOpacity>
        );
    }

    //here is modal content
    renderModalContent = () => {
        return (
            <View style={styles.modalViewStyle}>
                <View style={{ flexDirection: 'row', height: 50, width: deviceWidth, justifyContent: 'center', alignContent: 'center', alignItems: 'center', paddingLeft: 10, paddingRight: 10 }}>
                    <Text style={{ fontFamily: AppFonts.JosefinSansBold, color: AppColors.textColor, flex: 1, fontSize: 18 }}>Select Category</Text>
                    <TouchableOpacity
                        onPress={() => this.setState({ isModalVisible: false, selectFilterName: '' })}
                    >
                        <Image source={require('../../Images/close_icon.png')} style={{ width: 18, height: 18 }} />
                    </TouchableOpacity>
                </View>
                <FlatList
                    style={{ paddingTop: 5 }}
                    data={this.state.categoryList}
                    renderItem={this.renderCategoryContent}
                    keyExtractor={(item, index) => index}
                    extraData={this.state}
                    ItemSeparatorComponent={() => <View style={styles.dividerViewStyle} />}
                />
            </View>
        );
    }

    isOpenFilterDialog = () => {
        this.setState({ isModalVisible: !this.state.isModalVisible })
    }

    render() {
        return (
            <View style={{ flex: 1, backgroundColor: AppColors.transplant, height: deviceHeight, }}>
                <View style={{ backgroundColor: AppColors.toolbarColor }}>
                    <Toolbar setProps={this.props} headerName={'Car Tracking'}
                        isFilterIconShow={true} isModelVisible={this.isOpenFilterDialog} isInnerScreen={true} />
                </View>
                <View style={{ flex: 1 }}>
                    <View style={styles.searchBarMainView}>
                        <Elavation
                            elevation={3}
                            style={styles.searchElavationStyle}>
                            <View style={styles.searchElvationViewStyle}>
                                <TextInput style={styles.searchTxtInputStyle}
                                    placeholder='Search'
                                    placeholderTextColor={AppColors.toolbarColor}
                                    selectionColor={AppColors.toolbarColor}
                                />
                                <AntDesign name='search1' color={AppColors.toolbarColor} size={20} />
                            </View>
                        </Elavation>
                    </View>

                    <FlatList
                        style={{ paddingTop: 5 }}
                        data={this.state.vehicleList}
                        renderItem={this.renderVehicle}
                        keyExtractor={(item, index) => index}
                        extraData={this.state}
                    />
                </View>

                <ModalDialog
                    isVisible={this.state.isModalVisible}
                    style={{
                        justifyContent: "flex-end",
                        margin: 0
                    }}
                    onBackButtonPress={() => this.setState({ isModalVisible: false })}
                    backdropOpacity={0.5}
                    onBackdropPress={() => this.setState({ isModalVisible: false })}
                >
                    {this.renderModalContent()}
                </ModalDialog>

            </View>
        );
    }
}

const styles = StyleSheet.create({
    vehicleHaxNoTxtStyle: {
        width: 30, fontFamily: AppFonts.SourceSansProSemiBold, color: AppColors.textColor, fontSize: 16
    },
    vehicleCustNameTxtStyle: {
        fontFamily: AppFonts.SourceSansProSemiBold, flex: 1, color: AppColors.textColor, fontSize: 16
    }, vehicleInnerTxtHeadinStyle: {
        fontFamily: AppFonts.SourceSansProSemiBold, fontSize: 14, color: AppColors.textColor, flex: 1.5
    }, vehicleInnerTxtValueStyle: {
        fontFamily: AppFonts.SourceSansProRegular, color: AppColors.textColor, fontSize: 15, flex: 2
    },
    vehicleInnerMainViewStyle: {
        flexDirection: 'row',
        marginTop: 5,
        marginBottom: 5
    },
    vehicleStatusTxtStyle: {
        fontFamily: AppFonts.SourceSansProRegular, color: AppColors.textColor, fontSize: 14, marginRight: 10
    },
    vehicleInnreActionOpacityStyle: {
        borderRadius: 10, borderColor: AppColors.toolbarColor, borderWidth: 1,
    },
    vehicleInnreActionTxtStyle: {
        fontFamily: AppFonts.SourceSansProRegular, paddingLeft: 8, paddingRight: 8, paddingTop: 1, paddingBottom: 1, color: AppColors.textColor, fontSize: 12,
    }, modalViewStyle: {
        backgroundColor: AppColors.white,
        borderRadius: 4, flex: 0,
        //  height:deviceHeight*0.4,
        borderColor: AppColors.white, marginBottom: '-12%'
    },
    dialogMenuTxtStyle: {
        width: deviceWidth, height: 50,
        justifyContent: 'center',
        alignContent: 'center'
    }, dialogMenuTxtViewStyle: {
        fontFamily: AppFonts.JosefinSansRegular,
        color: AppColors.textColor,
        fontSize: 15,
        paddingLeft: 10
    }, dividerViewStyle: {
        width: deviceWidth,
        height: 0.5,
        backgroundColor: AppColors.textColor
    },
    searchBarMainView: {
        flexDirection: 'row',
        justifyContent: 'center',
        alignContent: 'center',
        alignItems: 'center',
        marginLeft: 8,
        marginRight: 5
    },
    searchElavationStyle: {
        flex: 1, height: 50,
        borderRadius: 10,
        marginTop: 8,
        marginLeft: 5,
        marginRight: 5,
        alignSelf: 'center'
    },
    searchElvationViewStyle: {
        flexDirection: 'row', flex: 1,
        alignContent: 'center', alignItems: 'center',
        paddingLeft: 5, marginLeft: 5,
        marginRight: 5, paddingRight: 5
    },
    searchTxtInputStyle: {
        flex: 1,
        fontFamily: AppFonts.SourceSansProRegular,
        color: AppColors.toolbarColor, fontSize: 18,
    },
    filterIconViewStyle: {
        marginLeft: 5, marginRight: 5,
        justifyContent: 'center', alignContent: 'center',
        alignItems: 'center', alignSelf: 'center', marginTop: 5
    }, filterIconStyle: {
        width: 25, height: 25
    }
})
export default VehcileContainerListScreen;


